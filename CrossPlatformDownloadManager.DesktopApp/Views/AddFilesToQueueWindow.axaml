<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:CrossPlatformDownloadManager.DesktopApp.ViewModels"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="450"
        x:Class="CrossPlatformDownloadManager.DesktopApp.Views.AddFilesToQueueWindow"
        x:DataType="vm:AddFilesToQueueWindowViewModel"
        Icon="/Assets/Images/cdm-logo.ico"
        Title="CDM - Add Files to Queue"
        Width="800"
        Height="600"
        MinWidth="800"
        MinHeight="600"
        MaxWidth="800"
        MaxHeight="600"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaTitleBarHeightHint="-1"
        CanResize="False">
    <Grid RowDefinitions="*, Auto"
          Margin="20">
        <!-- Files DataGrid -->
        <DataGrid Name="FilesDataGrid"
                  Grid.Row="0"
                  ItemsSource="{Binding DownloadFiles}"
                  Classes="minimalDataGrid"
                  Background="{DynamicResource SecondaryColor}"
                  SelectionMode="Extended"
                  SelectionChanged="FilesDataGrid_OnSelectionChanged">
            <DataGrid.Styles>
                <Style Selector="DataGrid DataGridRow">
                    <Style Selector="^:nth-child(2n) /template/ Rectangle#BackgroundRectangle">
                        <Setter Property="Fill"
                                Value="{DynamicResource SecondaryColor}" />
                        <Setter Property="IsVisible"
                                Value="True" />
                        <Setter Property="Opacity"
                                Value="1" />
                    </Style>

                    <Style Selector="^:nth-child(2n + 1) /template/ Rectangle#BackgroundRectangle">
                        <Setter Property="Fill"
                                Value="{DynamicResource PrimaryColor}" />
                        <Setter Property="IsVisible"
                                Value="True" />
                        <Setter Property="Opacity"
                                Value="1" />
                    </Style>

                    <Style Selector="^:pointerover /template/ Rectangle#BackgroundRectangle">
                        <Setter Property="Fill"
                                Value="{DynamicResource PrimaryColor}" />
                        <Setter Property="Opacity"
                                Value="0.5" />
                    </Style>

                    <Style Selector="^:selected /template/ Rectangle#BackgroundRectangle">
                        <Setter Property="Fill"
                                Value="{DynamicResource MenuBackgroundColor}" />
                    </Style>
                </Style>
            </DataGrid.Styles>

            <DataGrid.Columns>
                <DataGridTextColumn Header="File Name"
                                    Binding="{Binding FileName, FallbackValue='', TargetNullValue=''}"
                                    MinWidth="200" />

                <DataGridTextColumn Header="Queue"
                                    Binding="{Binding DownloadQueueName, FallbackValue='', TargetNullValue=''}"
                                    MinWidth="150" />

                <DataGridTextColumn Header="Size"
                                    Binding="{Binding SizeAsString}"
                                    MinWidth="100" />

                <DataGridTextColumn Header="Status"
                                    MinWidth="150"
                                    Binding="{Binding DownloadProgressAsString}" />

                <DataGridTextColumn Header="Time Left"
                                    Binding="{Binding TimeLeftAsString}"
                                    MinWidth="100" />
            </DataGrid.Columns>
        </DataGrid>

        <!-- Action buttons -->
        <StackPanel Grid.Row="1"
                    Orientation="Horizontal"
                    Spacing="10"
                    HorizontalAlignment="Right"
                    Margin="0, 15, 0, 0">
            <Button Classes="button success"
                    Command="{Binding SaveCommand}"
                    CommandParameter="{Binding $parent[Window]}">
                Save
            </Button>

            <Button Name="CancelButton"
                    Classes="button danger"
                    Click="CancelButton_OnClick">
                Cancel
            </Button>
        </StackPanel>
    </Grid>
</Window>